# Generated by Django 3.2.5 on 2021-07-06 18:20

import account.utils
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('father', models.CharField(blank=True, max_length=255, verbose_name='Father name')),
                ('father_job', models.CharField(blank=True, max_length=255, verbose_name='Father job')),
                ('father_mobile', models.CharField(blank=True, max_length=255, verbose_name='Father phone number')),
                ('child', models.IntegerField(default=0, verbose_name='Number of children')),
                ('meli', models.CharField(blank=True, max_length=10, unique=True, verbose_name='National ID number')),
                ('id_number', models.CharField(blank=True, max_length=10, unique=True, verbose_name='ID card number')),
                ('id_place', models.CharField(blank=True, max_length=255, verbose_name='Issuance of identity card place')),
                ('meli_image', models.ImageField(blank=True, upload_to=account.utils.image_upload_to, verbose_name='National ID image')),
                ('id_image', models.ImageField(blank=True, upload_to=account.utils.image_upload_to, verbose_name='ID card image')),
                ('card_number', models.CharField(blank=True, max_length=30, unique=True, verbose_name='Card number')),
                ('account_number', models.CharField(blank=True, max_length=30, unique=True, verbose_name='Account number')),
                ('shaba_number', models.CharField(blank=True, max_length=30, unique=True, verbose_name='Shaba number')),
                ('branch_code', models.CharField(blank=True, max_length=30, verbose_name='Branch code')),
                ('insurance_number', models.CharField(blank=True, max_length=30, verbose_name='Insurance number')),
                ('phone_number', models.CharField(blank=True, max_length=255, unique=True, verbose_name='Phone number')),
                ('tel', models.CharField(blank=True, max_length=255, verbose_name='Telephone')),
                ('emergency_mobile', models.CharField(blank=True, max_length=255, verbose_name='Emergency contact number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('marriage', models.IntegerField(choices=[(1, 'Married'), (2, 'Single'), (3, 'Divorced'), (4, 'Widowed'), (5, 'Unknown')], default=5, verbose_name='Marriage status')),
                ('education_level', models.IntegerField(choices=[(1, 'Dropout'), (2, 'Middle school degree'), (3, 'Diploma'), (4, 'Associate’s degree'), (5, 'Bachelor’s degree'), (6, 'Master’s Degree'), (7, 'Doctorate'), (8, 'Student'), (9, 'Unknown')], default=9, verbose_name='Education level')),
                ('sex', models.IntegerField(choices=[(1, 'Male'), (2, 'Female')], default=1, verbose_name='Sex')),
                ('military_service', models.IntegerField(choices=[(1, 'Exempted from military service'), (2, 'End of  military service'), (3, 'Subject to military service'), (4, 'fugitive'), (5, 'Exempted due to stuydy'), (6, 'Temporary Exempted'), (7, 'Female'), (8, 'Unknown')], default=8, verbose_name='Military service status')),
                ('status', models.IntegerField(choices=[(1, 'Is completed'), (2, 'Is not completed'), (3, 'Working'), (4, 'End of contract'), (5, 'Resignation'), (6, 'Fired'), (7, 'End of work')], default=2, verbose_name='User status')),
                ('postal_code', models.CharField(blank=True, max_length=30, verbose_name='Postal code')),
                ('birth_place', models.CharField(blank=True, max_length=255, verbose_name='Birth place')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('personal_image', models.ImageField(blank=True, upload_to=account.utils.image_upload_to, verbose_name='Personal image')),
                ('signature_image', models.ImageField(blank=True, upload_to=account.utils.image_upload_to, verbose_name='Signature image')),
                ('birth_date', models.DateField(blank=True, verbose_name='Birth date')),
                ('start_work', models.DateField(blank=True, verbose_name='Start of work date')),
                ('end_work', models.DateField(blank=True, verbose_name='End of work date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='core.bank', verbose_name='Bank')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('permission', models.ManyToManyField(blank=True, related_name='users', to='core.Permission', verbose_name='Permissions')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='core.role', verbose_name='Role')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='core.section', verbose_name='Section')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('work_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='core.workgroup', verbose_name='Work group')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('-pk',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
